// Package genapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package genapi

import (
	"time"

	openapi_types "github.com/oapi-codegen/runtime/types"
)

// Author defines model for Author.
type Author struct {
	Bio    *string            `json:"bio,omitempty"`
	Id     openapi_types.UUID `json:"id"`
	UserId openapi_types.UUID `json:"user_id"`
}

// CreateAuthorRequest defines model for CreateAuthorRequest.
type CreateAuthorRequest struct {
	Bio      *string `json:"bio,omitempty"`
	Login    string  `json:"login"`
	Password string  `json:"password"`
}

// CreateRecipeRequest defines model for CreateRecipeRequest.
type CreateRecipeRequest struct {
	AuthorId     openapi_types.UUID   `json:"author_id"`
	Ingredients  []IngredientQuantity `json:"ingredients"`
	Instructions string               `json:"instructions"`
	Title        string               `json:"title"`
}

// ErrorResponse defines model for ErrorResponse.
type ErrorResponse struct {
	Error *string `json:"error,omitempty"`
}

// IngredientQuantity defines model for IngredientQuantity.
type IngredientQuantity struct {
	IngredientId openapi_types.UUID `json:"ingredient_id"`
	Quantity     float32            `json:"quantity"`
}

// Recipe defines model for Recipe.
type Recipe struct {
	CreatedAt    time.Time          `json:"created_at"`
	Id           openapi_types.UUID `json:"id"`
	Instructions string             `json:"instructions"`
	Title        string             `json:"title"`
}

// GetAuthorsAuthorIdRecipesParams defines parameters for GetAuthorsAuthorIdRecipes.
type GetAuthorsAuthorIdRecipesParams struct {
	// Limit Maximum number of recipes to return (max 10)
	Limit *int `form:"limit,omitempty" json:"limit,omitempty"`

	// Offset Number of recipes to skip before starting to collect the result set
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`
}

// GetRecipesParams defines parameters for GetRecipes.
type GetRecipesParams struct {
	// Limit Maximum number of recipes to return (max 10)
	Limit *int `form:"limit,omitempty" json:"limit,omitempty"`

	// Offset Number of recipes to skip before starting to collect the result set
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`
}

// PostAuthorsJSONRequestBody defines body for PostAuthors for application/json ContentType.
type PostAuthorsJSONRequestBody = CreateAuthorRequest

// PostRecipesJSONRequestBody defines body for PostRecipes for application/json ContentType.
type PostRecipesJSONRequestBody = CreateRecipeRequest
